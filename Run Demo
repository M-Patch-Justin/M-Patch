SDK provides Demo based on Ethereum, PlatON, PlatONE, FISCO-BCOS, Hyperledger Fabric ,HW-BCS and Chainmaker. Before running these demos, the corresponding blockchain node software needs to be installed if there is no known nodes. Also the smart contracts required by the demo needs to be deployed.

The smart contract used by the demo and its ABI JSON file are placed in:

Demo smart contract	Contract ABI JSON file	use
<SDKRoot>/demo/demo_ethereum/demo_contract/StoreRead.sol	<SDKRoot>/demo/demo_ethereum/demo_contract/StoreRead.json	Ethereum demo
<SDKRoot>/demo/demo_platone/demo_contract/WASM/my_contract.cpp	<SDKRoot>/demo/demo_platone/demo_contract/WASM/my_contract.cpp.abi.json	PlatONE demo
<SDKRoot>/demo/demo_fiscobcos/demo_contract/HelloWorld.sol	<SDKRoot>/demo/demo_fiscobcos/demo_contract/HelloWorld.json	FISCO-BCOS demo
Before running Ethereum's Demo, you need to install the Ethereum node simulator ganache, as well as the Ethereum smart contract compilation deployment tool truffle, could visit this website: https://truffleframework.com .

Ganache has a ganache-cli version of the command line interface, and a Ganache version of the graphical interface. The ganache-cli of the command line interface and the Ganache 1.x version of the graphical interface will not be saved. If the process of ganache-cli or Ganache 1.x is terminated, the deployed contract will be lost. The command truffle migrate - reset Redeploy the contract, the address of the redeployed contract may change. The Ganache 2.x version of the graphical interface can create a Workspace save state. After closing and reopening the Workspace next time, the deployed contract still does not need to be redeployed.
In addition to using the ganache simulator, you can also use the Ethereum test network such as Ropsten (you need to apply for a free test token).

Before running the PlatON Demo, the PlatON node need to be installed. The specific process can be referred to this website: https://platon.network/ .

Before running the PlatONE Demo, you need to install the PlatONE node, as well as smart contract compilation and deployment tools,could visit this website: https://platone.wxblockchain.com .

Before running the FISCO-BCOS Demo, you need to install the FISCO-BCOS node and contract deployment. FISCO-BCOS source code and installation and deployment steps can visit this website: https://fisco-bcos-documentation.readthedocs.io

After completing the node (or simulator) deployment, you need to follow the instructions on the relevant websites to deploy the Demo smart contract. After the smart contract is successfully deployed, the contract address will be generated.

The Demo C code that calls the smart contract is placed in:

Demo C code	use
<SDKRoot>/demo/demo_ethereum/demo_ethereum_storeread.c	Ethereum demo use case
<SDKRoot>/demo/demo_ethereum/demo_ethereum_transfer.c	Ethereum transfer demo use case
<SDKRoot>/demo/demo_platon/demo_platon_transfer.c	PLATON transfer demo use case
<SDKRoot>/demo/demo_platone/demo_platone_mycontract.c	PLATONE demo use case
<SDKRoot>/demo/demo_fiscobcos/demo_fiscobcos_helloworld.c	FISCO-BCOS demo use case
<SDKRoot>/demo/demo_fabric/demo_fabric_abac.c	FABRIC demo use case
<SDKRoot>/demo/demo_hw_bcs/demo_hw_bcs.c	HW-BCS demo use case
<SDKRoot>/demo/demo_chainmaker/demo_chainmaker.c	CHAINMAKER demo use case
Before compiling the Demo, you need to modify the following parts of the Demo C code:

For ETHEREUM, PLATON, FISCO-BCOS, PLATONE:

Search for demoUrl and fill in the node URL (including port) as the IP address and RPC port of the actual deployed node or simulator
If the demo needs to use the native private key, search for native_demoKey and set the client private key as:
For ETHEREUM, set it to the private key of any account generated by ganache
For PlatON, there is no need to modify the private key in the Demo
For PlatONE, there is no need to modify the private key in the Demo
For FISCO-BCOS, set it to the native format private key corresponding to the private key under /console/accounts
If the demo needs to use the native private key, search for pkcs_demoKey and set the client private key as:
For Ethereum, set the PKCS format private key corresponding to the private key of any account generated by Ganache
For PlatONE, there is no need to modify the private key in the Demo
For PlatONE, there is no need to modify the private key in the Demo
For FISCO-BCOS, set it to the private key under /console/accounts
Search for demoRecipientAddress and modify it to the deployment address of the Demo contract.
For FABRIC:

Search for fabric_client_demokey and set the private key used by the client
Search for fabric_client_democert and set the certificate corresponding to the client private key
If TLS is enabled for the demo, search for fabric_org1_tlsCert, fabric_org2_tlsCert, fabric_order_tlsCert, and set the CA certificate chain
Search for fabric_demo_order1_url, fabric_demo_endorser_peer0Org1_url, fabric_demo_endorser_peer1Org1_url, fabric_demo_endorser_peer0Org2_url, fabric_demo_endorser_peer1Org2_url, and set the url address of the endorsement node and sorting node
If TLS is enabled in the demo, search for fabric_demo_order1_hostName, fabric_demo_endorser_peer0Org1_hostName, fabric_demo_endorser_peer1Org1_hostName, fabric_demo_endorser_peer0Org2_hostName, fabric_demo_endorser_peer1Org2_hostName and set the host name of the node
For HW-BCS:

Search for hw_bcs_client_demokey and set the private key used by the client
Search for hw_bcs_client_democert and set the certificate corresponding to the client private key
If TLS is enabled for the demo, search for hw_bcs_org1_tlsCert, hw_bcs_org2_tlsCert, and set the CA certificate chain
Search for hw_bcs_demo_endorser_peer0Org1_url, hw_bcs_demo_endorser_peer0Org2_url, hw_bcs_demo_order_url, and set the url address of the endorsement node and sorting node
If TLS is enabled in the demo, search for hw_bcs_demo_endorser_peer0Org1_hostName, hw_bcs_demo_endorser_peer0Org2_hostName, hw_bcs_demo_order_hostNameand set the host name of the node
For CHAINMAKER：

Search forchainmaker_user_key ，and set the private key used by the client
Search forchainmaker_user_cert，and set the certificate corresponding to the client private key
If TLS is enabled for the demo， search forchainmaker_tls_ca_cert，and set the CA certificate chain
Search forchainmaker_node_url， set url address
if TLS is enable in the demo， search forchainmaker_host_nameand set the host name of the node
Compile Demo

Execute the following commands in the <SDKRoot> directory to compile the SDK call Demo:

$make demo
The generated Demo programs are located under the path <SDKRoot>/build/demo/demo_<protocol>/, and the can be ethereum,platon,fisco-bcos,platone,fabric,hwbcs or chainmaker.
